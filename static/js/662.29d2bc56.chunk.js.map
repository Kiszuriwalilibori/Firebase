{"version":3,"file":"static/js/662.29d2bc56.chunk.js","mappings":"qNAwBA,QAtBA,SAAsBA,EAAcC,EAAUC,EAAMC,GAChD,MAAO,CAACC,EAAUC,KACVL,EACAG,EAASG,SAASC,KAAKL,GAAM,SAAUM,GAC/BA,GACAJ,GAASK,EAAAA,EAAAA,IAAUD,EAAME,UACzBT,EAASO,QACTJ,GAASO,EAAAA,EAAAA,SAETC,YAAW,WACPR,GAASS,EAAAA,EAAAA,SACV,KACHT,GAASU,EAAAA,EAAAA,IAAWZ,IACpBE,GAASO,EAAAA,EAAAA,YAIjBP,GAASW,EAAAA,EAAAA,IAAY,+DACrBX,GAASO,EAAAA,EAAAA,U,aCfrB,IAAIK,EAAkBC,IACpB,MAAM,WAAEC,GAAeD,EACvB,OACE,SAAC,SAAD,CAAWE,KAAK,SAASC,GAAG,eAAeC,SAAUH,EAArD,UACE,wCASNF,GAAkBM,EAAAA,EAAAA,KAJMC,IAAK,CAC3BL,WAAYK,EAAMC,kBAGuB,KAAzBF,CAA+BN,GAEjD,U,uBCPA,IAAIS,EAAgBR,IAChB,MAAMS,GAAQC,EAAAA,EAAAA,QAAO,OACf,KAAEC,EAAF,QAAQC,EAAR,aAAiBC,EAAjB,YAA+Bf,EAA/B,aAA4CJ,GAAiBM,EAC7Dd,GAAW4B,EAAAA,EAAAA,YAAWC,EAAAA,GACtB/B,EAAWgC,EAAAA,SACb,MACIzB,MAAO,KACHqB,EAAQtB,KAAK2B,EAAAA,KAEjBC,QAAS,KACLN,EAAQtB,KAAK2B,EAAAA,KAEjBE,KAAM,KACFP,EAAQtB,KAAK2B,EAAAA,QAGrB,CAACL,KAILQ,EAAAA,EAAAA,YAAU,IAAMX,EAAMY,QAAQC,SAAS,CAACb,IAExC,MAAM,OAAEc,EAAF,aAAUC,EAAV,cAAwBC,EAAxB,YAAuCC,EAAvC,YAAoDC,EAApD,OAAiEC,IAAWC,EAAAA,EAAAA,IAAU,CACxFC,cAAe,CACXC,YAAa,GACbC,WAAY,IAEhBC,iBAAkBC,EAAAA,KAAaC,MAAM,CACjCJ,YAAaG,EAAAA,KAAaE,MAAM,yBAAyBC,SAAS,YAClEL,WAAYE,EAAAA,KACPI,IAAI,EAAG,kCACPD,SAAS,YACTE,QAAQ,qHAAgC,wBAEjDC,WACQ7B,GACAjB,IACAR,EAASG,SACJoD,aAAa,SACbC,QAAQnB,EAAOQ,aACfY,KAAK,SAASC,IACX,MAAMC,GAAkBD,EAASE,SAEjCjC,EACIgC,EACA7D,EACA,CACI+D,KAAMxB,EAAOS,WACbI,MAAOb,EAAOQ,YACdpB,KAAMA,EAAKqC,aAAerC,EAAKyB,OAEnClD,OAIZY,EAAY,wEAKxB,OACI,UAAC,kBAAD,CAAoB0C,SAAUhB,EAA9B,WACI,SAAC,kBAAD,WACI,SAAC,WAAD,CACIa,UAAQ,EACRY,UAAU,IACVC,UAAU,KACVC,QAAQ,qHACRC,YAAY,UACZlD,KAAK,OACLmD,IAAK5C,KACDgB,EAAc,mBAG1B,SAAC,kBAAD,WACI,SAAC,WAAD,CACIwB,UAAU,IACVE,QAAQ,+BACRC,YAAY,WACZlD,KAAK,UACDuB,EAAc,oBAI1B,SAAC,EAAD,MAjEmD,KAAtBF,EAAOS,YAA4C,KAAvBT,EAAOQ,eAmE5D,SAAC,kBAAD,CAAoBuB,QAAS5B,EAA7B,UACI,SAAC,mBAAD,WACI,6CAIXC,EAAc,GAAKC,IAChB,iBAAM2B,UAAU,+BAAhB,SACKC,KAAKC,UAAU7B,EAAQ,KAAM,GAAG8B,UAAU,EAAGF,KAAKC,UAAU7B,EAAQ,KAAM,GAAG+B,OAAS,SA6B3GnD,GAAgBoD,EAAAA,EAAAA,KAAWvD,EAAAA,EAAAA,KAJHC,IAAK,CACzBK,KAAML,EAAMK,SAnBWxB,IAAQ,CAC/BW,YAAab,IACTE,GAASW,EAAAA,EAAAA,IAAYb,KAEzBO,UAAWP,IACPE,GAASK,EAAAA,EAAAA,IAAUP,KAEvBW,qBAAsB,KAClBT,GAASS,EAAAA,EAAAA,QAEbiB,aAAc,CAAC9B,EAAcC,EAAUC,EAAMC,KACzCC,EAAS0B,EAAa9B,EAAcC,EAAUC,EAAMC,KAExDQ,aAAc,KACVP,GAASO,EAAAA,EAAAA,WAQUW,CAA6CG,IAExE,UClIA,IAAIqD,EAAqB7D,IACrB,MAAM,sBAAE8D,EAAF,qBAAyBC,EAAzB,kBAA+CC,EAA/C,kBAAkEC,EAAlE,UAAqFC,GACvFlE,EAEEmE,EAAgB,IAClBF,GACI,UAAC,SAAD,CACI9D,GAAG,gBACHD,KAAK,SACLoD,QAASW,EAAoBC,EAAY,aAH7C,WAKI,SAAC,eAAD,KACA,SAAC,aAAD,2BAGJ,UAAC,kBAAD,YACI,SAAC,eAAD,KACA,SAAC,aAAD,0BAIZ,OACI,UAAC,aAAD,YACMJ,IAAyB,SAACK,EAAD,KAEzBJ,IACE,UAAC,oBAAD,YACI,SAAC,eAAD,KACA,uEAINC,IAAqB,SAAC,EAAD,KAErBC,IACE,UAAC,mBAAD,YACI,SAAC,eAAD,KACA,iEAkBpBJ,GAAqBxD,EAAAA,EAAAA,KAXGC,IAAK,CACzBwD,sBAAuBxD,EAAMwD,sBAC7BC,qBAAsBzD,EAAMyD,qBAC5BC,kBAAmB1D,EAAM0D,kBACzBC,kBAAmB3D,EAAM2D,sBAGF9E,IAAQ,CAC/B+E,UAAW,IAAM/E,GAASiF,EAAAA,EAAAA,UAGT/D,CAA6CwD,GAUlE,U,cC/DA,MAAMQ,GAAWC,EAAAA,EAAAA,OAAK,IAAM,iEACtBC,GAASD,EAAAA,EAAAA,OAAK,IAAM,gCACpBE,GAAsBF,EAAAA,EAAAA,OAAK,IAAM,wDACjCG,GAAeH,EAAAA,EAAAA,OAAK,IAAM,wDAC1BI,GAAuBJ,EAAAA,EAAAA,OAAK,IAAM,gCAClCK,GAAeL,EAAAA,EAAAA,OAAK,IAAM,wDAC1BM,GAAaN,EAAAA,EAAAA,OAAK,IAAM,iEAgE9B,MAAMO,GAAUxE,EAAAA,EAAAA,KAdQC,IAAK,CACzBwE,QAASxE,EAAMwE,QACfC,aAAczE,EAAMyE,aACpBC,UAAW1E,EAAM0E,UACjBrE,KAAML,EAAMK,SAGhB,SAA4BxB,GACxB,MAAO,CACH8F,MAAOhG,GAAQE,GAAS8F,EAAAA,EAAAA,IAAMhG,IAC9BiG,UAAW,IAAM/F,GAAS+F,EAAAA,EAAAA,MAC1BC,KAAM,CAACC,EAAGC,KAAMlG,OAAAA,GC1EHH,ED0EiBoG,EC1EPE,ED0EUD,ECzE9B,CAAClG,EAAUC,KACdkG,EAAQC,aAAaC,GAAG,SAAS,SAAUC,IACpB,IAAfA,EAAKC,MACLvG,GAASwG,EAAAA,EAAAA,IAAY,4EAErBxG,GACIK,EAAAA,EAAAA,IACI,uNAGRR,EAASO,YAIjBJ,GAASyG,EAAAA,EAAAA,OACT5G,EAASkC,UACToE,EAAQjG,SAASmG,GACb,SACA5C,IACI,MAAM3D,EAAO2D,EAAS8C,MACtB,IAAKzG,EAID,OAFAE,GAASK,EAAAA,EAAAA,IAAU,gFACnBR,EAASO,QAIb,IAAK,IAAIsG,KAAY5G,EAAM,CACvB,MAAMmG,EAAInG,EAAK4G,GACTR,EAAI,CAACQ,GACXR,EAAE,GAAKD,EAAErC,KACTsC,EAAE,GAAKD,EAAEhD,MACTiD,EAAE,GAAKD,EAAEzE,KAET1B,EAAK4G,GAAYR,EAErB,MAAMS,EAAS1G,IAAW2G,aACtBD,EACA3G,GACI6G,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYC,OAAO3E,OAAOtC,GAAOG,IAAW+G,iBAAkBL,KAG1E7G,GACAE,GAAS6G,EAAAA,EAAAA,IAAYE,OAAO3E,OAAOtC,KAG3CE,GAASyG,EAAAA,EAAAA,OACT5G,EAASmC,UAEb5B,KACIC,EAAAA,EAAAA,IAAUD,GACVP,EAASO,WAIjB+F,EAAQc,KAAKC,oBAAmB1F,IAC5BA,GAAQxB,GAAS8F,EAAAA,EAAAA,IAAMtE,UAzD5B,IAAc3B,EAAUsG,MD6EfjF,EA9DhB,SAAoBL,GAChB,MAAM,UAAEgF,EAAF,KAAarE,EAAb,KAAmBwE,EAAnB,QAAyBvE,GAAY,IAAKZ,GAC1Cd,GAAW4B,EAAAA,EAAAA,YAAWC,EAAAA,GACtB/B,EAAWgC,EAAAA,SACb,MACIzB,MAAO,KACHqB,EAAQtB,KAAK2B,EAAAA,KAEjBC,QAAS,KACLN,EAAQtB,KAAK2B,EAAAA,KAEjBE,KAAM,KACFP,EAAQtB,KAAK2B,EAAAA,QAGrB,CAACL,IASL,OANAQ,EAAAA,EAAAA,YAAU,KACFpC,GAAYE,GACZiG,EAAKnG,EAAUE,KAEpB,CAACA,EAAUF,EAAUmG,KAGpB,+BACI,UAAC,EAAAmB,SAAD,CAAUC,SAAU,KAApB,WACI,SAAClC,EAAD,KACA,SAACM,EAAD,CAAchE,KAAMA,KACpB,SAAC4D,EAAD,CAAQiC,QAASxB,KACjB,UAAC,KAAAyB,IAAD,YACI,SAAChC,EAAD,KACA,SAACiC,EAAA,EAAD,CAAMC,IAAI,EAAMC,QAAS,IAAzB,UACI,UAAC,kBAAD,YACI,SAAC,EAAD,KACA,UAAC,WAAD,YACI,SAAClC,EAAD,KACA,SAACF,EAAD,gBAKhB,SAACI,EAAD,YAsBhB,K,4KE/EA,MAGMiC,EAAkB,UAClBC,EAAY,UACZC,EAAmB,UACnBC,EAAa,OACbC,EAAmB,UAEnBxH,EAAUyH,EAAAA,GAAAA,IAAH,iDAEPC,EAAMD,EAAAA,GAAAA,OAAH,ouBA4BHE,GAAUF,EAAAA,EAAAA,IAAOC,EAAPD,CAAH,kLAUAG,EAAc,CACvBZ,IAAKS,EAAAA,GAAAA,IAAF,qTAYHI,aAAcJ,EAAAA,GAAAA,KAAF,+fAcZK,MAAOL,EAAAA,GAAAA,MAAF,8UAgBIM,EAAO,CAChBC,QAASP,EAAAA,GAAAA,OAAF,sWAcPQ,KAAMR,EAAAA,GAAAA,EAAAA,OAAelH,IAAK,CACtB2H,KAAM,wBACNC,OAAQ,SACRC,IAAK,cAHHX,CAAF,sHA1GW,qBAqHNY,EAAW,CACpBL,QAASP,EAAAA,GAAAA,IAAF,6TAvHa,WAqIpBa,gBAAgBb,EAAAA,EAAAA,IAAOzH,EAAPyH,CAAF,gDAnIG,WAsIjBc,eAAed,EAAAA,EAAAA,IAAOzH,EAAPyH,CAAF,gDACAD,GAEbE,IAAAA,EACAc,aAAcb,EACdc,QAAShB,EAAAA,GAAAA,KAAF,wDAGPiB,UAAW,KAAM,iBAAM5E,UAAU,UAAhB,oBACjB6E,UAAW,KAAM,iBAAM7E,UAAU,UAAhB,oBACjB8E,UAAW,KAAM,iBAAM9E,UAAU,UAAhB,qBAGR+E,EAAQ,CACjBN,cAAed,EAAAA,GAAAA,KAAF,uIAIAD,GAEbxG,MAAOyG,EAAAA,GAAAA,MAAF,8MAMmBJ,EACXD,GAEb0B,aAAcrB,EAAAA,GAAAA,IAAF,sDAGZsB,aAActB,EAAAA,GAAAA,IAAF,0KAKYH,GAExB0B,aAAcvB,EAAAA,GAAAA,IAAF,0KAKYH,GAExB2B,aAAcxB,EAAAA,GAAAA,KAAF,+RAWZC,IAAAA,GAGSwB,EAAS,CAClBlB,QAASP,EAAAA,GAAAA,MAAF,gFACiBL,EACXC,GAEb8B,aAAc1B,EAAAA,GAAAA,GAAF,sMASZ2B,QAAS7I,IAAS,SAAC2I,EAAOC,aAAR,CAAqBrF,UAAU,YAA/B,SAA4CvD,EAAM8I,YAG3DC,EAAO,CAChBC,UAAW9B,EAAAA,GAAAA,IAAF,2HAKT+B,cAAe/B,EAAAA,GAAAA,GAAF,wHAKbgC,iBAAkBhC,EAAAA,GAAAA,GAAF,qHAKhBiC,OAAQjC,EAAAA,GAAAA,KAAF,ggBAGOF,EACCA,EAjOC,UAwOSC,GAMxBmC,OAAQlC,EAAAA,GAAAA,OAAAA,OAAoBlH,IAAK,CAAOE,KAAM,SAAU,aAAc,YAA9DgH,CAAF,oHAOiBmC,EAAAA,EAAAA,IAAH","sources":["js/REDUX/THUNKS/submitFigure.js","components/PersonsTable/AddPersonButton.jsx","components/PersonsTable/AddPersonForm.jsx","components/PersonsTable/PersonsTableHeader.jsx","components/Persons.jsx","js/REDUX/THUNKS/loadData.js","styles/style.js"],"sourcesContent":["import { hideAddedUserMessage, submitUser, showError, showWarning, toggleSubmit } from '../actions';\r\n\r\nfunction submitFigure(notDuplicate, redirect, data, firebase) {\r\n    return (dispatch, getState) => {\r\n        if (notDuplicate) {\r\n            firebase.itemsRef.push(data, function (error) {\r\n                if (error) {\r\n                    dispatch(showError(error.message));\r\n                    redirect.error();\r\n                    dispatch(toggleSubmit());\r\n                } else {\r\n                    setTimeout(function () {\r\n                        dispatch(hideAddedUserMessage());\r\n                    }, 3000);\r\n                    dispatch(submitUser(data));\r\n                    dispatch(toggleSubmit());\r\n                }\r\n            });\r\n        } else {\r\n            dispatch(showWarning('Użytkownik o tym e-mailu jest już zarejestrowany'));\r\n            dispatch(toggleSubmit());\r\n        }\r\n    };\r\n}\r\nexport default submitFigure;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input } from \"../../styles/style\";\r\n\r\nlet AddPersonButton = props => {\r\n  const { isDisabled } = props;\r\n  return (\r\n    <Input.btn type=\"submit\" id=\"SubmitButton\" disabled={isDisabled}>\r\n      <span>Submit</span>\r\n    </Input.btn>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isDisabled: state.submitDisabled,\r\n});\r\n\r\nAddPersonButton = connect(mapStateToProps, null)(AddPersonButton);\r\n\r\nexport default AddPersonButton;\r\n\r\nAddPersonButton.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n};\r\n","import React, { useEffect, useRef, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { showError, hideAddedUserMessage, showWarning, toggleSubmit } from '../../js/REDUX/actions';\r\nimport * as ROUTES from '../../js/routing/routes';\r\nimport { useFormik } from 'formik';\r\nimport { Input } from '../../styles/style';\r\nimport submitFigure from '../../js/REDUX/THUNKS/submitFigure';\r\nimport AddPersonButton from './AddPersonButton';\r\nimport { FirebaseContext } from '../../contexts/firebaseContext';\r\nimport * as Yup from 'yup';\r\n\r\nlet AddPersonForm = props => {\r\n    const input = useRef(null);\r\n    const { user, history, submitFigure, showWarning, toggleSubmit } = props;\r\n    const firebase = useContext(FirebaseContext);\r\n    const redirect = React.useMemo(\r\n        () => ({\r\n            error: () => {\r\n                history.push(ROUTES.ERROR);\r\n            },\r\n            loading: () => {\r\n                history.push(ROUTES.CONNECT);\r\n            },\r\n            home: () => {\r\n                history.push(ROUTES.PERSONS);\r\n            },\r\n        }),\r\n        [history],\r\n    );\r\n\r\n    const isResetFieldsHidden = () => !!(values.personName === '' && values.personEmail === '');\r\n    useEffect(() => input.current.focus(), [input]);\r\n\r\n    const { values, handleSubmit, getFieldProps, handleReset, submitCount, errors } = useFormik({\r\n        initialValues: {\r\n            personEmail: '',\r\n            personName: '',\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n            personEmail: Yup.string().email('Invalid email address').required('Required'),\r\n            personName: Yup.string()\r\n                .min(4, 'Must be more than 3 characters')\r\n                .required('Required')\r\n                .matches('[a-zA-ZąĄććęęłŁńŃóÓśŚżŻŹŹ ]+', 'Invalid characters'),\r\n        }),\r\n        onSubmit() {\r\n            if (user) {\r\n                toggleSubmit();\r\n                firebase.itemsRef\r\n                    .orderByChild('email')\r\n                    .equalTo(values.personEmail)\r\n                    .once('value', snapshot => {\r\n                        const isNotDuplicate = !snapshot.exists();\r\n\r\n                        submitFigure(\r\n                            isNotDuplicate,\r\n                            redirect,\r\n                            {\r\n                                name: values.personName,\r\n                                email: values.personEmail,\r\n                                user: user.displayName || user.email,\r\n                            },\r\n                            firebase,\r\n                        );\r\n                    });\r\n            } else {\r\n                showWarning('Tylko zalogowani użytkownicy mogą dodawać postacie');\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Input.outerWrapper onSubmit={handleSubmit}>\r\n            <Input.innerWrapper>\r\n                <Input.input\r\n                    required\r\n                    minLength=\"2\"\r\n                    maxLength=\"20\"\r\n                    pattern=\"[a-zA-ZąĄććęęłŁńŃóÓśŚżŻŹŹ ]+\"\r\n                    placeholder=\"Name...\"\r\n                    type=\"text\"\r\n                    ref={input}\r\n                    {...getFieldProps('personName')}\r\n                />\r\n            </Input.innerWrapper>\r\n            <Input.inputWrapper>\r\n                <Input.input\r\n                    minLength=\"2\"\r\n                    pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\r\n                    placeholder=\"Email...\"\r\n                    type=\"text\"\r\n                    {...getFieldProps('personEmail')}\r\n                />\r\n            </Input.inputWrapper>\r\n\r\n            <AddPersonButton />\r\n            {!isResetFieldsHidden() && (\r\n                <Input.resetWrapper onClick={handleReset}>\r\n                    <Input.dangerMessage>\r\n                        <u> Reset Fields</u>\r\n                    </Input.dangerMessage>\r\n                </Input.resetWrapper>\r\n            )}\r\n            {submitCount > 0 && errors && (\r\n                <span className=\"AddPersonForm__error-message\">\r\n                    {JSON.stringify(errors, null, 2).substring(1, JSON.stringify(errors, null, 2).length - 1)}\r\n                </span>\r\n            )}\r\n        </Input.outerWrapper>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showWarning: data => {\r\n        dispatch(showWarning(data));\r\n    },\r\n    showError: data => {\r\n        dispatch(showError(data));\r\n    },\r\n    hideAddedUserMessage: () => {\r\n        dispatch(hideAddedUserMessage());\r\n    },\r\n    submitFigure: (notDuplicate, redirect, data, firebase) => {\r\n        dispatch(submitFigure(notDuplicate, redirect, data, firebase));\r\n    },\r\n    toggleSubmit: () => {\r\n        dispatch(toggleSubmit());\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n});\r\n\r\nAddPersonForm = withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPersonForm));\r\n\r\nexport default AddPersonForm;\r\n\r\nAddPersonForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    submitFigure: PropTypes.func,\r\n    showWarning: PropTypes.func,\r\n    toggleSubmit: PropTypes.func,\r\n    user: PropTypes.object,\r\n    history: PropTypes.object,\r\n    hideAddedUserMessage: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n//import AddPersonForm from './AddPersonForm';\r\nimport AddPersonForm from './AddPersonForm';\r\nimport { showAddUserForm } from '../../js/REDUX/actions';\r\nimport { Overhead } from '../../styles/style';\r\n\r\nlet PersonsTableHeader = props => {\r\n    const { isHiddenAddUserButton, isHiddenAddedUserMsg, isHiddenInputForm, isNotLimitReached, onAddUser } =\r\n        props;\r\n\r\n    const AddUserButton = () =>\r\n        isNotLimitReached ? (\r\n            <Overhead.btn\r\n                id=\"AddUserButton\"\r\n                type=\"button\"\r\n                onClick={isNotLimitReached ? onAddUser : function () {}}\r\n            >\r\n                <Overhead.iconCross />\r\n                <Overhead.btnText>Add User</Overhead.btnText>\r\n            </Overhead.btn>\r\n        ) : (\r\n            <Overhead.btn_disabled>\r\n                <Overhead.iconCross />\r\n                <Overhead.btnText>Add User</Overhead.btnText>\r\n            </Overhead.btn_disabled>\r\n        );\r\n\r\n    return (\r\n        <Overhead.wrapper>\r\n            {!isHiddenAddUserButton && <AddUserButton />}\r\n\r\n            {!isHiddenAddedUserMsg && (\r\n                <Overhead.successMessage>\r\n                    <Overhead.iconCheck />\r\n                    <span> You have succesfully added an user </span>\r\n                </Overhead.successMessage>\r\n            )}\r\n\r\n            {!isHiddenInputForm && <AddPersonForm />}\r\n\r\n            {!isNotLimitReached && (\r\n                <Overhead.dangerMessage>\r\n                    <Overhead.iconLimit />\r\n                    <span> You have reached the limit</span>\r\n                </Overhead.dangerMessage>\r\n            )}\r\n        </Overhead.wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isHiddenAddUserButton: state.isHiddenAddUserButton,\r\n    isHiddenAddedUserMsg: state.isHiddenAddedUserMsg,\r\n    isHiddenInputForm: state.isHiddenInputForm,\r\n    isNotLimitReached: state.isNotLimitReached,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddUser: () => dispatch(showAddUserForm()),\r\n});\r\n\r\nPersonsTableHeader = connect(mapStateToProps, mapDispatchToProps)(PersonsTableHeader);\r\n\r\nPersonsTableHeader.propTypes = {\r\n    isHiddenAddUserButton: PropTypes.bool,\r\n    isHiddenAddUserMsg: PropTypes.bool,\r\n    isHiddenInputForm: PropTypes.bool,\r\n    isNotLimitReached: PropTypes.bool,\r\n    onAddUser: PropTypes.func,\r\n};\r\n\r\nexport default PersonsTableHeader;\r\n","import React, { useEffect, lazy, Suspense, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login, hideError } from '../js/REDUX/actions';\r\nimport { Fade } from '@material-ui/core';\r\nimport PersonsTableHeader from './PersonsTable/PersonsTableHeader';\r\nimport { load } from '../js/REDUX/THUNKS/loadData';\r\nimport { FirebaseContext } from '../contexts/firebaseContext';\r\nimport { Application } from '../styles/style';\r\nimport * as ROUTES from '../js/routing/routes';\r\n\r\nconst AlertBox = lazy(() => import('./AlertBox'));\r\nconst Loader = lazy(() => import('./Loader'));\r\nconst PersonsTableContent = lazy(() => import('./PersonsTable/PersonsTableContent'));\r\nconst LoginSection = lazy(() => import('./LoginSection'));\r\nconst PersonsTableSortArea = lazy(() => import('./PersonsTable/PersonsTableSortArea'));\r\nconst UserInfoCard = lazy(() => import('./UserInfoCard'));\r\nconst MessageBox = lazy(() => import('./MessageBox'));\r\n\r\nfunction PrepareApp(props) {\r\n    const { isLoading, user, load, history } = { ...props };\r\n    const firebase = useContext(FirebaseContext);\r\n    const redirect = React.useMemo(\r\n        () => ({\r\n            error: () => {\r\n                history.push(ROUTES.ERROR);\r\n            },\r\n            loading: () => {\r\n                history.push(ROUTES.CONNECT);\r\n            },\r\n            home: () => {\r\n                history.push(ROUTES.PERSONS);\r\n            },\r\n        }),\r\n        [history],\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (redirect && firebase) {\r\n            load(redirect, firebase);\r\n        }\r\n    }, [firebase, redirect, load]);\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={null}>\r\n                <AlertBox />\r\n                <UserInfoCard user={user} />\r\n                <Loader visible={isLoading} />\r\n                <Application.App>\r\n                    <LoginSection />\r\n                    <Fade in={true} timeout={2000}>\r\n                        <Application.TableWrapper>\r\n                            <PersonsTableHeader />\r\n                            <Application.Table>\r\n                                <PersonsTableSortArea />\r\n                                <PersonsTableContent />\r\n                            </Application.Table>\r\n                        </Application.TableWrapper>\r\n                    </Fade>\r\n                </Application.App>\r\n                <MessageBox />\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isError: state.isError,\r\n    errorMessage: state.errorMessage,\r\n    isLoading: state.isLoading,\r\n    user: state.user,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login: data => dispatch(login(data)),\r\n        hideError: () => dispatch(hideError()),\r\n        load: (x, y) => dispatch(load(x, y)),\r\n    };\r\n}\r\nconst Persons = connect(mapStateToProps, mapDispatchToProps)(PrepareApp);\r\n\r\nexport default Persons;\r\n","import { getDataDone, login, showError, toggleSpinner, showMessage } from '../actions';\r\nimport { sortFigures } from '../../FUNCTIONS/functions';\r\n\r\nexport function load(redirect, context) {\r\n    return (dispatch, getState) => {\r\n        context.connectedRef.on('value', function (snap) {\r\n            if (snap.val() === true) {\r\n                dispatch(showMessage('Ustanowiono lub przywrócono połączenie z bazą danych'));\r\n            } else {\r\n                dispatch(\r\n                    showError(\r\n                        'W tej chwili nie masz połączenia z bazą. Wskazane jest abyś nie wykonywał operacji zapisu i odczytu, gdyż mają one wyłacznie lokalny zasięg i nie zmieniają bazy',\r\n                    ),\r\n                );\r\n                redirect.error();\r\n            }\r\n        });\r\n\r\n        dispatch(toggleSpinner());\r\n        redirect.loading(); // ale nadal przy pierwszym właczeniu bez internetu kręci się kręcioł bez końca może jednak trza zrobić tak: jeżeli zaskoczy snapshot jak poniżej to gasi settimeouta który w innej sytuacji wybije error po czasie\r\n        context.itemsRef.on(\r\n            'value',\r\n            snapshot => {\r\n                const data = snapshot.val();\r\n                if (!data) {\r\n                    //prevents reading empty database\r\n                    dispatch(showError('Baza jest pusta lub wystąpił problem z połączeniem'));\r\n                    redirect.error();\r\n                    return;\r\n                }\r\n\r\n                for (let property in data) {\r\n                    const x = data[property];\r\n                    const y = [property];\r\n                    y[1] = x.name;\r\n                    y[2] = x.email;\r\n                    y[3] = x.user;\r\n\r\n                    data[property] = y;\r\n                }\r\n                const column = getState().columnSortBy;\r\n                if (column) {\r\n                    dispatch(\r\n                        getDataDone(sortFigures(Object.values(data), getState().isSortDescending, column)),\r\n                    );\r\n                } else {\r\n                    if (data) {\r\n                        dispatch(getDataDone(Object.values(data)));\r\n                    } /*else{dispatch(getDataDone(null));} */ //if by mistake all is removed sending null is a sort of service entry\r\n                }\r\n                dispatch(toggleSpinner());\r\n                redirect.home();\r\n            },\r\n            error => {\r\n                showError(error);\r\n                redirect.error();\r\n            },\r\n        );\r\n\r\n        context.auth.onAuthStateChanged(user => {\r\n            user && dispatch(login(user));\r\n        });\r\n    };\r\n}\r\n","import styled, { createGlobalStyle } from 'styled-components';\nimport React from 'react';\n\nconst overheaderColor = '#495F75';\nconst colorUnamo = 'rgb(0, 193, 179)';\nconst colorSuccess = '#39ff14';\nconst colorSailorBlue = '#495F75';\nconst colorMint = '#C2F1DB';\nconst inputBorderColor = '#C2F1DB';\nconst circleSize = '30px';\nconst circleBackground = '#FBEA58';\nconst circleText = '#5A5D50';\nconst message = styled.div`margin 0 1rem; color: grey;`;\n\nconst btn = styled.button`\n    display: inline-block;\n    font-weight: 700;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    user-select: none;\n    border: 1px solid #c2f1db;\n    padding: 0.375rem 3rem;\n    margin: 0.5rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    border-radius: 0.25rem;\n    overflow: visible;\n    color: #c2f1db;\n    background-color: transparent;\n    cursor: pointer;\n    transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out, border-color 0.3s ease-in-out,\n        box-shadow 0.3s ease-in-out;\n    &:hover,\n    &:focus {\n        color: #495f75;\n        outline: none;\n        background-color: #c2f1db;\n        border-color: transparent;\n    }\n`;\n\nconst btn_dis = styled(btn)`\n    opacity: 0.5;\n    cursor: default;\n    &:hover {\n        color: gold;\n        background-color: transparent;\n        border-color: gold;\n    }\n`;\n\nexport const Application = {\n    App: styled.div`\n        overflow-y: auto;\n        display: flex;\n        min-height: 100%;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n        padding-top: 20vh;\n        width: 100%;\n        max-width: 800px;\n        margin: 0 auto;\n    `,\n    TableWrapper: styled.main`\n        width: 96%;\n        border-radius: 0.25rem;\n        border: 1px solid #3c5063;\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 2px 2px rgba(0, 0, 0, 0.15),\n            0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.15);\n        font-size: 1rem;\n        line-height: 1.5;\n        font-family: 'Lato', sans-serif;\n        margin: 1vw 1vw;\n        @media (max-width: 569px) {\n            font-size: calc(12px + 4 * ((100vw - 320px) / 249));\n        }\n    `,\n    Table: styled.table`\n        width: 100%;\n        overflow-y: hidden;\n        overflow-x: auto;\n        box-shadow: inset 0 1px 1px rgba(200, 200, 200, 0.11);\n\n        @media (max-width: 300px) {\n            display: block;\n        }\n\n        @media (min-width: 569px) {\n            overflow-y: visible;\n        }\n    `,\n};\n\nexport const Logo = {\n    wrapper: styled.header`\n        display: flex;\n        width: 100%;\n        flex-direction: row;\n        justify-content: space-evenly;\n        align-items: center;\n        padding: 4vh 0;\n\n        @media (max-width: 568px) {\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n    `,\n    page: styled.a.attrs(props => ({\n        href: 'https://unamo.com/pl/',\n        target: '_blank',\n        rel: 'noopener',\n    }))`\n        font-size: 1.5rem;\n        color: ${colorUnamo};\n        font-family: 'Lato', sans-serif;\n    `,\n};\n\nexport const Overhead = {\n    wrapper: styled.div`\n        display: flex;\n        min-height: 4.2rem;\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: center;\n        background-color: ${overheaderColor};\n        border: 0;\n\n        @media (min-width: 569px) {\n            flex-direction: row;\n        }\n    `,\n\n    successMessage: styled(message)`\n        color: ${colorSuccess};\n    `,\n    dangerMessage: styled(message)`\n        color: ${circleBackground};\n    `,\n    btn,\n    btn_disabled: btn_dis,\n    btnText: styled.span`\n        margin-left: 1rem;\n    `,\n    iconCheck: () => <span className=\"IcoMoon\">&#xe900;</span>,\n    iconCross: () => <span className=\"IcoMoon\">&#xe902;</span>,\n    iconLimit: () => <span className=\"IcoMoon\">&#xe901;</span>,\n};\n\nexport const Input = {\n    dangerMessage: styled.span`\n        letter-spacing: 0.08rem;\n        font-weight: 700;\n        cursor: pointer;\n        color: ${circleBackground};\n    `,\n    input: styled.input`\n        border: 0;\n        cursor: pointer;\n        overflow: visible;\n        font-size: 16px;\n        padding: 0.3rem;\n        background-color: ${colorMint};\n        color: ${colorSailorBlue};\n    `,\n    resetWrapper: styled.div`\n        display: inline;\n    `,\n    innerWrapper: styled.div`\n        display: inline;\n        padding: 0.25rem;\n        margin: 0.5rem;\n        border-radius: 0.25rem;\n        border: 1px solid ${inputBorderColor};\n    `,\n    inputWrapper: styled.div`\n        display: inline;\n        padding: 0.25rem;\n        margin: 0.5rem;\n        border-radius: 0.25rem;\n        border: 1px solid ${inputBorderColor};\n    `,\n    outerWrapper: styled.form`\n        display: flex;\n        flex-direction: column;\n        padding: 0.5rem;\n        align-items: center;\n        flex-wrap: wrap;\n        @media (min-width: 569px) {\n            flex-direction: row;\n            justify-content: center;\n        }\n    `,\n    btn,\n};\n\nexport const Header = {\n    wrapper: styled.thead`\n        background-color: ${colorSailorBlue};\n        color: ${colorMint};\n    `,\n    sectionStyle: styled.th`\ncursor: pointer;\ntext-align: left;\n@media(max-width: 568px) {padding 0.75rem 0}\n@media(min-width: 569px) {padding 0.75rem}\n\nvertical-align:top;\nborder-top: 1px solid;\n`,\n    section: props => <Header.sectionStyle className=\"icon-Sort\">{props.children}</Header.sectionStyle>,\n};\n\nexport const Rows = {\n    EmailCell: styled.div`\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    `,\n    MiddleAligned: styled.td`\n        vertical-align: middle;\n        padding: 0.75rem;\n        border-top: 1px solid;\n    `,\n    MiddleAlignedTop: styled.td`\n        vertical-align: top;\n        padding: 0.75rem;\n        border-top: 1px solid;\n    `,\n    Circle: styled.span`\n        text-shadow: 0 -0.03rem 0.03rem;\n        font-weight: 100;\n        width: ${circleSize};\n        height: ${circleSize};\n        color: ${circleText};\n        border: 1px solid;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: ${circleBackground};\n        @media (max-width: 569px) {\n            width: calc(20px + 10 * ((100vw - 320px) / 249));\n            height: calc(20px + 10 * ((100vw - 320px) / 249));\n        }\n    `,\n    button: styled.button.attrs(props => ({ type: 'button', 'aria-label': 'delete' }))`\n        background: transparent;\n        border-radius: 50%;\n        border: none;\n    `,\n};\n\nexport const GlobalStyle = createGlobalStyle`\nbody {color: gold; \n}; \n* {box-sizing: border-box}\n\n*{@import url('./styles/App.css');\n\n}\n\n\n\nhtml {\n\n  font-size: 12px;\n  \n  @media \n    (max-width: 330px){ font-size:10px;}\n  @media \n    (min-width: 331px)and (max-width: 568px) { font-size:12px;}\n     \n  @media \n    (min-width: 569px){ font-size:16px;}\n  \n \n\n}\n`;\n"],"names":["notDuplicate","redirect","data","firebase","dispatch","getState","itemsRef","push","error","showError","message","toggleSubmit","setTimeout","hideAddedUserMessage","submitUser","showWarning","AddPersonButton","props","isDisabled","type","id","disabled","connect","state","submitDisabled","AddPersonForm","input","useRef","user","history","submitFigure","useContext","FirebaseContext","React","ROUTES","loading","home","useEffect","current","focus","values","handleSubmit","getFieldProps","handleReset","submitCount","errors","useFormik","initialValues","personEmail","personName","validationSchema","Yup","shape","email","required","min","matches","onSubmit","orderByChild","equalTo","once","snapshot","isNotDuplicate","exists","name","displayName","minLength","maxLength","pattern","placeholder","ref","onClick","className","JSON","stringify","substring","length","withRouter","PersonsTableHeader","isHiddenAddUserButton","isHiddenAddedUserMsg","isHiddenInputForm","isNotLimitReached","onAddUser","AddUserButton","showAddUserForm","AlertBox","lazy","Loader","PersonsTableContent","LoginSection","PersonsTableSortArea","UserInfoCard","MessageBox","Persons","isError","errorMessage","isLoading","login","hideError","load","x","y","context","connectedRef","on","snap","val","showMessage","toggleSpinner","property","column","columnSortBy","getDataDone","sortFigures","Object","isSortDescending","auth","onAuthStateChanged","Suspense","fallback","visible","App","Fade","in","timeout","colorSailorBlue","colorMint","inputBorderColor","circleSize","circleBackground","styled","btn","btn_dis","Application","TableWrapper","Table","Logo","wrapper","page","href","target","rel","Overhead","successMessage","dangerMessage","btn_disabled","btnText","iconCheck","iconCross","iconLimit","Input","resetWrapper","innerWrapper","inputWrapper","outerWrapper","Header","sectionStyle","section","children","Rows","EmailCell","MiddleAligned","MiddleAlignedTop","Circle","button","createGlobalStyle"],"sourceRoot":""}