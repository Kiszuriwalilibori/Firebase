{"version":3,"sources":["js/FIXTURES/fixtures.js","components/PersonsTable/PersonsTableSortArea.jsx"],"names":["headings","PersonsTableSortArea","props","columnSortBy","nonSortableColumns","isSortDescending","onSort","arrow","wrapper","onClick","e","targetColumn","target","cellIndex","undefined","has","map","item","index","section","key","connect","state","dispatch","data","sort"],"mappings":"iIAAaA,EAAW,CAAC,KAAK,OAAQ,U,eCOlCC,EAAuB,SAAAC,GACzB,GAAIA,EAAO,CAAC,IACFC,EAA+DD,EAA/DC,aAAcC,EAAiDF,EAAjDE,mBAAoBC,EAA6BH,EAA7BG,iBAAkBC,EAAWJ,EAAXI,OAEtDC,EAAQF,EAAmB,SAAW,SAe5C,OACE,gBAAC,IAAOG,QAAR,CAAgBC,QAfC,SAAAC,GACjB,IAAMC,EAAeD,EAAEE,OAAOC,eAC8BC,IAAvBV,GAAqCA,EAAmBW,IAAIJ,IAS/FL,EALa,CACXD,iBAFmBF,IAAiBQ,IAAiBN,EAGrDF,aAAcQ,MAQhB,0BACGX,EAASgB,KAAI,SAACC,EAAMC,GAAP,OACZ,gBAAC,IAAOC,QAAR,CAAgBC,IAAKH,GAArB,IApB2Bd,IAoBwBe,EAASD,EAAOV,EAAQU,EAA3E,YAiBZhB,EAAuBoB,aATC,SAAAC,GAAK,MAAK,CAChCnB,aAAcmB,EAAMnB,aACpBE,iBAAkBiB,EAAMjB,iBACxBD,mBAAoBkB,EAAMlB,uBAGD,SAAAmB,GAAQ,MAAK,CACtCjB,OAAQ,SAAAkB,GAAI,OAAID,EAASE,YAAKD,QAETH,CAA6CpB,GAErDA","file":"static/js/16.8c47a133.chunk.js","sourcesContent":["export const headings = ['ID','NAME', 'E-MAIL'];\n\n   \n ","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { headings } from \"../../js/FIXTURES/fixtures\";\nimport { sort } from \"../../js/ACTIONS/actions\";\nimport { Header } from \"../../styles/style\";\n\nlet PersonsTableSortArea = props => {\n  if (props) {\n    const { columnSortBy, nonSortableColumns, isSortDescending, onSort } = props;\n    const isCurrentColumnSorted = x => columnSortBy === x;\n    const arrow = isSortDescending ? \"\\u2191\" : \"\\u2193\";\n    const handleSort = e => {\n      const targetColumn = e.target.cellIndex;\n      const columnNotExcludedFromSorting = nonSortableColumns === undefined || !nonSortableColumns.has(targetColumn);\n\n      if (columnNotExcludedFromSorting) {\n        const isDescending = columnSortBy === targetColumn && !isSortDescending;\n        const data = {\n          isSortDescending: isDescending,\n          columnSortBy: targetColumn,\n        };\n\n        onSort(data);\n      }\n    };\n    return (\n      <Header.wrapper onClick={handleSort}>\n        <tr>\n          {headings.map((item, index) => (\n            <Header.section key={item}> {isCurrentColumnSorted(index) ? item + arrow : item} </Header.section>\n          ))}\n        </tr>\n      </Header.wrapper>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  columnSortBy: state.columnSortBy,\n  isSortDescending: state.isSortDescending,\n  nonSortableColumns: state.nonSortableColumns,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSort: data => dispatch(sort(data)),\n});\nPersonsTableSortArea = connect(mapStateToProps, mapDispatchToProps)(PersonsTableSortArea);\n\nexport default PersonsTableSortArea;\n\nPersonsTableSortArea.propTypes = {\n  columnSortBy: PropTypes.number,\n  isSortDescending: PropTypes.oneOf([true, false, null]),\n  onSort: PropTypes.func,\n};\n"],"sourceRoot":""}