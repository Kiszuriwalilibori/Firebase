{"version":3,"file":"static/js/391.3ebd0e45.chunk.js","mappings":"yPAoBA,MAiEA,GAAeA,EAAAA,EAAAA,IAAQ,MAJKC,IAAD,CACvBC,UAAYC,GAAoBF,GAASC,EAAAA,EAAAA,IAAUC,OAGvD,EAjE0BC,IACtB,MAAM,UAAEF,GAAcE,EAChBC,EAAWC,EAAAA,WAAiBC,EAAAA,GAC5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAcC,EAAAA,EAAAA,MAEdC,EAAqBT,EAAAA,aAAmBU,IAC1C,MAAMC,EAAUZ,EAASa,SAASC,IAAK,UAASH,KAChD,GAAIC,EACA,IACIA,EAAQG,SACRP,EAAYQ,QAAQ,6BACvB,CAAC,MAAOC,GAELpB,EAAU,CAAEqB,aADFD,EACkBE,QAASC,SAAS,IAC9CjB,EAASkB,EAAAA,GACZ,MAEDxB,EAAU,CACNqB,aACI,2JACJE,SAAS,IAEbjB,EAASkB,EAAAA,GACZ,GACF,IAEH,OAAKhB,GAA8B,IAAnBA,EAAQiB,QAKpB,2BACKjB,EAAQkB,KAAI,CAACC,EAAQC,KAClB,gBAAiBC,MAAO,CAAEC,OAAQ,IAAlC,WACI,SAAC,KAAD,WACI,SAAC,KAAD,UAASF,EAAQ,KADHG,QAGlB,SAAC,KAAD,UAA2BJ,EAAOK,MAAhBD,QAClB,SAAC,KAAD,WACI,UAAC,KAAD,YACI,0BAAOJ,EAAOM,QACbN,EAAOO,eACJ,SAAC,KAAD,CACIC,QACIR,EAAOO,aAAe,IAAMrB,EAAmBc,EAAOS,aAAe,OAEzE,aAAY,8BAAgCT,EAAOM,MAJvD,UAMI,SAAC,KAAD,MAEL,QAZOF,SALbA,WANV,IAGX,G,WCjBJM,EAAOC,QA9BP,WACE,MAAMC,EAAY,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF,IAAIR,EAAO,GACX,IAAK,IAAIS,EAAI,EAAGA,EAAI,GAAIA,IAEpBT,EAAKS,GADG,IAANA,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,EAC3B,IAEAD,EAAUE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAUd,OAAS,IAGtE,OAAOM,EAAKa,KAAK,GAClB,C","sources":["pages/PersonsPage/parts/PersonsTable/Body.tsx","../node_modules/react-uuid/uuid.js"],"sourcesContent":["import * as React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport * as ROUTES from \"routes\";\r\n\r\nimport { showError } from \"reduxware/actions\";\r\nimport { FirebaseContext } from \"contexts/firebaseContext\";\r\nimport { ErrorType, FirebaseError } from \"types\";\r\nimport { AppDispatch } from \"components/AppProvider\";\r\nimport { selectPersons } from \"reduxware/selectors\";\r\nimport { Button, ClearIcon, RegularCell, Circle, EmailCell } from \"./styles\";\r\nimport { useMessage } from \"hooks\";\r\n\r\ninterface Props {\r\n    showError: typeof showError;\r\n}\r\n\r\nconst PersonsTableBody = (props: Props) => {\r\n    const { showError } = props;\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const navigate = useNavigate();\r\n    const persons = useSelector(selectPersons);\r\n    const showMessage = useMessage();\r\n\r\n    const handleRemovePerson = React.useCallback((str: string) => {\r\n        const itemRef = firebase.database.ref(`/items/${str}`);\r\n        if (itemRef) {\r\n            try {\r\n                itemRef.remove();\r\n                showMessage.success(\"Person succesfully removed\");\r\n            } catch (err: any) {\r\n                const e = err as FirebaseError;\r\n                showError({ errorMessage: e.message, isError: true });\r\n                navigate(ROUTES.ERROR);\r\n            }\r\n        } else {\r\n            showError({\r\n                errorMessage:\r\n                    \"Podczas próby usunięcia użytkownika pojawił się problem. Wszystko wskazuje, że tego użytkownika nie ma już w bazie\",\r\n                isError: true,\r\n            });\r\n            navigate(ROUTES.ERROR);\r\n        }\r\n    }, []);\r\n\r\n    if (!persons || persons.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            {persons.map((person, index) => (\r\n                <tr key={uuid()} style={{ height: 75 }}>\r\n                    <RegularCell key={uuid()}>\r\n                        <Circle>{index + 1}</Circle>\r\n                    </RegularCell>\r\n                    <RegularCell key={uuid()}>{person.name}</RegularCell>\r\n                    <RegularCell key={uuid()}>\r\n                        <EmailCell>\r\n                            <span>{person.email}</span>\r\n                            {person.isAuthorised && (\r\n                                <Button\r\n                                    onClick={\r\n                                        person.isAuthorised ? () => handleRemovePerson(person.firebaseRef) : () => {}\r\n                                    }\r\n                                    aria-label={\"remove user having e-mail  \" + person.email}\r\n                                >\r\n                                    <ClearIcon />\r\n                                </Button>\r\n                            )}{\" \"}\r\n                        </EmailCell>\r\n                    </RegularCell>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    showError: (data: ErrorType) => dispatch(showError(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PersonsTableBody);\r\n","/**\nA function that returns a universally unique identifier (uuid).  \nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n@returns `string` : 32 character uuid (see example)\n*/\nfunction uuid() {\n  const hashTable = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n  ];\n  let uuid = [];\n  for (let i = 0; i < 35; i++) {\n    if (i === 7 || i === 12 || i === 17 || i === 22) {\n      uuid[i] = '-';\n    } else {\n      uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)];\n    }\n  }\n  return uuid.join('');\n}\n\nmodule.exports = uuid;\n"],"names":["connect","dispatch","showError","data","props","firebase","React","FirebaseContext","navigate","useNavigate","persons","useSelector","selectPersons","showMessage","useMessage","handleRemovePerson","str","itemRef","database","ref","remove","success","err","errorMessage","message","isError","ROUTES","length","map","person","index","style","height","uuid","name","email","isAuthorised","onClick","firebaseRef","module","exports","hashTable","i","Math","floor","random","join"],"sourceRoot":""}