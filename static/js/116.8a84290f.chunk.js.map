{"version":3,"file":"static/js/116.8a84290f.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","pages/PersonsPage/parts/UserCard.jsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    position: \"fixed\",\r\n    right: \"1vw\",\r\n    top: \"1vh\",\r\n    backgroundColor: \"#1995AD\",\r\n    color: \"white\",\r\n    boxShadow: \"0 0 1px rgba(0,0,0,0.6), 0 0 2px rgba(0,0,0, 0.6), 0 0 4px rgba(0,0,0,0.6), 0 0 8px rgba(0,0,0,0.6),0 0 16px rgba(0,0,0,0.6)\",\r\n  },\r\n  media: {\r\n    height: 60,\r\n    width: 60,\r\n    margin: \"12px auto 0 auto\",\r\n    backgroundSize: \"contain\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default function UserInfoCard(props) {\r\n  const classes = useStyles();\r\n  const { user } = props;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={user.photoURL} title=\"user photo\" component=\"img\" />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {user.displayName || user.email}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {user.email || user.displayName}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nUserInfoCard.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\n/**\r\n * todo - a jeżeli nie ma zdjęcia to co wtedy ??? babol leci dzisiaj ale wczoraj było dobrze. I teraz znowu jest dobrze. Dać by grawatara jako alternatywę\r\n */\r\n"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardContent","_props$component","component","Component","padding","paddingBottom","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","useStyles","makeStyles","maxWidth","color","boxShadow","height","margin","UserInfoCard","user","photoURL","title","Typography","gutterBottom","variant","displayName","email"],"sourceRoot":""}