{"version":3,"file":"static/js/734.44c40f47.chunk.js","mappings":"8IAUA,QARO,SAA+BA,EAAeC,EAA2BC,GAC5E,YAAqBC,IAAjBD,EAAmC,GACMA,IAGhBF,EAAS,KADxBC,EAAmB,SAAW,UACQ,EACvD,E,2CCOD,MA0CA,GAAeG,EAAAA,EAAAA,KARUC,IAAD,CACpBC,WAAYD,EAAMC,eAGMC,IAAD,CACvBC,YAAcF,GAA2BC,GAASC,EAAAA,EAAAA,IAAYF,OAGlE,EA1C8BG,IAC1B,MAAM,YAAED,EAAF,WAAeF,GAAeG,EAepC,OACI,SAAC,KAAOC,QAAR,CAAgBC,QAdAC,IAChB,MAAM,OAAEC,GAAWD,EACbE,EAAgBD,EAAgCE,UAGtD,QAF4DZ,IAAvBa,EAAAA,KAAqCA,EAAAA,GAAmBC,IAAIH,GAE/D,CAC9B,MAAMI,EAAO,CACTC,aAAcb,EAAWc,SAAWN,IAAiBR,EAAWa,aAChEC,OAAQN,GAEZN,EAAYU,EACf,GAGD,UACI,wBACKG,EAAAA,GAAcC,KAAI,CAACC,EAAMvB,KACtB,UAAC,KAAOwB,QAAR,CACIC,KAAK,SACL,aAAa,WAAUF,IAEvBG,WAAYV,EAAAA,GAAmBC,IAAIjB,GAJvC,UAMKuB,EAAOI,EAAsB3B,EAAOM,EAAWa,aAAcb,EAAWc,QAAS,MAH7EG,QAPzB,G","sources":["pages/PersonsPage/parts/PersonsTable/scripts/createSortOrderMarker.ts","pages/PersonsPage/parts/PersonsTable/SortArea.tsx"],"sourcesContent":["\n\nexport function createSortOrderMarker(index: number, isSortDescending: boolean, columnSortBy: number | undefined) {\n    if (columnSortBy === undefined) return \"\";\n    const isCurrentColumnSorted = (x: number) => columnSortBy === x;\n\n    const arrow = isSortDescending ? \"\\u2191\" : \"\\u2193\";\n    return isCurrentColumnSorted(index) ? \" \" + arrow : \"\";\n}\n\nexport default createSortOrderMarker;\n","import { connect } from \"react-redux\";\r\n\r\nimport createSortOrderMarker from \"./scripts/createSortOrderMarker\";\r\n\r\nimport { tableHeadings, nonSortableColumns } from \"../../../../config\";\r\nimport { sortPersons } from \"js/redux/actions\";\r\nimport { Header } from \"styles/style\";\r\nimport { AppDispatch, RootStateType } from \"components\";\r\nimport { HTMLClick, SortParams } from \"types/index\";\r\n\r\ninterface Props {\r\n    sortPersons: (arg0: SortParams) => void;\r\n    sortParams: SortParams;\r\n}\r\n\r\nconst PersonsTableSortArea = (props: Props) => {\r\n    const { sortPersons, sortParams } = props;\r\n\r\n    const handleSort = (e: React.MouseEvent<HTMLTableCellElement>) => {\r\n        const { target } = e;\r\n        const targetColumn = (target as HTMLTableCellElement).cellIndex;\r\n        const columnNotExcludedFromSorting = nonSortableColumns === undefined || !nonSortableColumns.has(targetColumn);\r\n\r\n        if (columnNotExcludedFromSorting) {\r\n            const data = {\r\n                isDescending: sortParams.column === targetColumn && !sortParams.isDescending,\r\n                column: targetColumn,\r\n            };\r\n            sortPersons(data);\r\n        }\r\n    };\r\n    return (\r\n        <Header.Wrapper onClick={handleSort as HTMLClick}>\r\n            <tr>\r\n                {tableHeadings.map((item, index) => (\r\n                    <Header.Section\r\n                        role=\"button\"\r\n                        aria-label={`Sort by ${item}`}\r\n                        key={item}\r\n                        focusable={!nonSortableColumns.has(index)}\r\n                    >\r\n                        {item + createSortOrderMarker(index, sortParams.isDescending, sortParams.column)}{\" \"}\r\n                    </Header.Section>\r\n                ))}\r\n            </tr>\r\n        </Header.Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    sortParams: state.sortParams,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    sortPersons: (sortParams: SortParams) => dispatch(sortPersons(sortParams)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonsTableSortArea);\r\n"],"names":["index","isSortDescending","columnSortBy","undefined","connect","state","sortParams","dispatch","sortPersons","props","Wrapper","onClick","e","target","targetColumn","cellIndex","nonSortableColumns","has","data","isDescending","column","tableHeadings","map","item","Section","role","focusable","createSortOrderMarker"],"sourceRoot":""}