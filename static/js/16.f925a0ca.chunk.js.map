{"version":3,"sources":["js/FIXTURES/fixtures.js","components/PersonsTable/PersonsTableSortArea.jsx"],"names":["headings","PersonsTableSortArea","connect","state","columnSortBy","isSortDescending","nonSortableColumns","dispatch","onSort","data","sort","props","arrow","wrapper","onClick","e","targetColumn","target","cellIndex","undefined","has","map","item","index","section","key","propTypes","PropTypes","number","oneOf"],"mappings":"iJAAaA,EAAW,CAAC,KAAK,OAAQ,U,eCiDtC,IAUMC,EAAuBC,aAVL,SAACC,GAAD,MAAY,CAClCC,aAAcD,EAAMC,aACpBC,iBAAkBF,EAAME,iBACxBC,mBAAoBH,EAAMG,uBAGD,SAACC,GAAD,MAAe,CACxCC,OAAQ,SAACC,GAAD,OAAUF,EAASG,YAAKD,QAGLP,EApD7B,SAA+BS,GAC7B,GAAIA,EAAO,CAAC,IAERP,EAIEO,EAJFP,aACAE,EAGEK,EAHFL,mBACAD,EAEEM,EAFFN,iBACAG,EACEG,EADFH,OAIII,EAAQP,EAAmB,SAAW,SAiB5C,OACE,gBAAC,IAAQQ,QAAT,CAAiBC,QAjBA,SAACC,GAClB,IAAMC,EAAeD,EAAEE,OAAOC,eAELC,IAAvBb,GACCA,EAAmBc,IAAIJ,IASxBR,EALa,CACXH,iBAFmBD,IAAiBY,IAAiBX,EAGrDD,aAAcY,MAQhB,0BACGhB,EAASqB,KAAI,SAACC,EAAMC,GAAP,OACZ,gBAAC,IAAQC,QAAT,CAAiBC,IAAKH,GACnB,IAvB0BlB,IAwBJmB,EAASD,EAAOV,EAAQU,EAAM,cAwBpDrB,YAEfA,EAAqByB,UAAY,CAC/BtB,aAAcuB,IAAUC,OACxBvB,iBAAkBsB,IAAUE,MAAM,EAAC,GAAM,EAAO","file":"static/js/16.f925a0ca.chunk.js","sourcesContent":["export const headings = ['ID','NAME', 'E-MAIL'];\n\n   \n ","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { headings } from \"../../js/FIXTURES/fixtures\";\nimport { sort } from \"../../js/ACTIONS/actions\";\nimport { header_ } from \"../../styles/style\";\n\nfunction _PersonsTableSortArea(props) {\n  if (props) {\n    const {\n      columnSortBy,\n      nonSortableColumns,\n      isSortDescending,\n      onSort,\n    } = props;\n\n    const isCurrentColumnSorted = (x) => columnSortBy === x;\n    const arrow = isSortDescending ? \"\\u2191\" : \"\\u2193\";\n    const handleSort = (e) => {\n      const targetColumn = e.target.cellIndex;\n      const columnNotExcludedFromSorting =\n        nonSortableColumns === undefined ||\n        !nonSortableColumns.has(targetColumn);\n\n      if (columnNotExcludedFromSorting) {\n        const isDescending = columnSortBy === targetColumn && !isSortDescending;\n        const data = {\n          isSortDescending: isDescending,\n          columnSortBy: targetColumn,\n        };\n\n        onSort(data);\n      }\n    };\n    return (\n      <header_.wrapper onClick={handleSort}>\n        <tr>\n          {headings.map((item, index) => (\n            <header_.section key={item}>\n              {\" \"}\n              {isCurrentColumnSorted(index) ? item + arrow : item}{\" \"}\n            </header_.section>\n          ))}\n        </tr>\n      </header_.wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  columnSortBy: state.columnSortBy,\n  isSortDescending: state.isSortDescending,\n  nonSortableColumns: state.nonSortableColumns,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSort: (data) => dispatch(sort(data)),\n});\n\nconst PersonsTableSortArea = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_PersonsTableSortArea);\n\nexport default PersonsTableSortArea;\n\nPersonsTableSortArea.propTypes = {\n  columnSortBy: PropTypes.number,\n  isSortDescending: PropTypes.oneOf([true, false, null]),\n};\n"],"sourceRoot":""}