{"version":3,"sources":["components/AlertBox.jsx"],"names":["NewAlert","withStyles","root","background","zIndex","position","top","left","color","fontWeight","border","margin","maxWidth","boxShadow","Alert","AlertBox","props","visible","message","hideWarning","in","severity","onClose","connect","state","errorMessage","isAlert","dispatch"],"mappings":"uGAAA,oEAQMA,EAAWC,YAAW,CAC1BC,KAAM,CACJC,WAAY,UACZC,OAAQ,OACRC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,MAAO,QACPC,WAAY,OACZC,OAAQ,oBACRC,OAAQ,YACRC,SAAU,QACVC,UAAW,oIAZEZ,CAcda,KAECC,EAAW,SAAAC,GAAU,IACfC,EAAkCD,EAAlCC,QAASC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,YAE1B,OAAOF,EACL,gBAAC,IAAD,CAAMG,IAAI,GACR,gBAACpB,EAAD,CAAUqB,SAAS,QAAQC,QAASH,GAClC,gBAAC,IAAD,iBACCD,IAGH,MAaNH,EAAWQ,aAVa,SAAAC,GAAK,MAAK,CAChCN,QAASM,EAAMC,aACfR,QAASO,EAAME,YAEU,SAAAC,GACzB,MAAO,CACLR,YAAa,kBAAMQ,EAASR,mBAIrBI,CAA6CR,GAEzCA","file":"static/js/11.3d508220.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { hideWarning } from \"../js/ACTIONS/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewAlert = withStyles({\r\n  root: {\r\n    background: \"#AA1227\",\r\n    zIndex: \"1000\",\r\n    position: \"fixed\",\r\n    top: \"1vw\",\r\n    left: \"1vh\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    border: \"2px solid #D13525\",\r\n    margin: \"40px auto\",\r\n    maxWidth: \"300px\",\r\n    boxShadow: \"inset 0 0 2px #D13525, 0 1px 1px rgba(0,0,0,0.14), 0 2px 2px rgba(0,0,0,0.14),0 0 4px rgba(0,0,0,0.14),0 0 8px rgba(0,0,0,0.14)\",\r\n  },\r\n})(Alert);\r\n\r\nlet AlertBox = props => {\r\n  const { visible, message, hideWarning } = props;\r\n\r\n  return visible ? (\r\n    <Fade in={true}>\r\n      <NewAlert severity=\"error\" onClose={hideWarning}>\r\n        <AlertTitle>Uwaga!!!</AlertTitle>\r\n        {message}\r\n      </NewAlert>\r\n    </Fade>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  message: state.errorMessage,\r\n  visible: state.isAlert,\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideWarning: () => dispatch(hideWarning()),\r\n  };\r\n};\r\n\r\nAlertBox = connect(mapStateToProps, mapDispatchToProps)(AlertBox);\r\n\r\nexport default AlertBox;\r\n\r\nAlertBox.propTypes = {\r\n  visible: PropTypes.bool,\r\n  message: PropTypes.string,\r\n  hideWarning: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}