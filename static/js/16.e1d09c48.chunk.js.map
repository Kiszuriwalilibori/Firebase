{"version":3,"sources":["js/FIXTURES/fixtures.js","components/PersonsTable/PersonsTableSortArea.jsx"],"names":["headings","PersonsTableSortArea","props","columnSortBy","nonSortableColumns","isSortDescending","onSort","isCurrentColumnSorted","x","arrow","handleSort","e","targetColumn","target","cellIndex","undefined","has","wrapper","onClick","map","item","index","section","key","connect","state","dispatch","data","sort"],"mappings":"iIAAO,MAAMA,EAAW,CAAC,KAAM,OAAQ,U,oBCOvC,IAAIC,EAAuBC,IACvB,GAAIA,EAAO,CACP,MAAM,aAAEC,EAAF,mBAAgBC,EAAhB,iBAAoCC,EAApC,OAAsDC,GAAWJ,EACjEK,EAAwBC,GAAKL,IAAiBK,EAC9CC,EAAQJ,EAAmB,SAAW,SACtCK,EAAaC,IACf,MAAMC,EAAeD,EAAEE,OAAOC,UAI9B,QAF2BC,IAAvBX,IAAqCA,EAAmBY,IAAIJ,GAE9B,CAO9BN,EALa,CACTD,iBAFiBF,IAAiBS,IAAiBP,EAGnDF,aAAcS,MAM1B,OACI,gBAAC,IAAOK,QAAR,CAAgBC,QAASR,GACrB,0BACKV,EAASmB,IAAI,CAACC,EAAMC,IACjB,gBAAC,IAAOC,QAAR,CAAgBC,IAAKH,GAChB,IACAb,EAAsBc,GAASD,EAAOX,EAAQW,EAAM,UAkBjFnB,EAAuBuB,YATCC,IAAK,CACzBtB,aAAcsB,EAAMtB,aACpBE,iBAAkBoB,EAAMpB,iBACxBD,mBAAoBqB,EAAMrB,qBAGHsB,IAAQ,CAC/BpB,OAAQqB,GAAQD,EAASE,YAAKD,MAEXH,CAA6CvB,GAErDA","file":"static/js/16.e1d09c48.chunk.js","sourcesContent":["export const headings = ['ID', 'NAME', 'E-MAIL'];\r\nexport const limit = 15;\r\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { headings } from '../../js/FIXTURES/fixtures';\nimport { sort } from '../../js/REDUX/actions';\nimport { Header } from '../../styles/style';\n\nlet PersonsTableSortArea = props => {\n    if (props) {\n        const { columnSortBy, nonSortableColumns, isSortDescending, onSort } = props;\n        const isCurrentColumnSorted = x => columnSortBy === x;\n        const arrow = isSortDescending ? '\\u2191' : '\\u2193';\n        const handleSort = e => {\n            const targetColumn = e.target.cellIndex;\n            const columnNotExcludedFromSorting =\n                nonSortableColumns === undefined || !nonSortableColumns.has(targetColumn);\n\n            if (columnNotExcludedFromSorting) {\n                const isDescending = columnSortBy === targetColumn && !isSortDescending;\n                const data = {\n                    isSortDescending: isDescending,\n                    columnSortBy: targetColumn,\n                };\n\n                onSort(data);\n            }\n        };\n        return (\n            <Header.wrapper onClick={handleSort}>\n                <tr>\n                    {headings.map((item, index) => (\n                        <Header.section key={item}>\n                            {' '}\n                            {isCurrentColumnSorted(index) ? item + arrow : item}{' '}\n                        </Header.section>\n                    ))}\n                </tr>\n            </Header.wrapper>\n        );\n    }\n};\n\nconst mapStateToProps = state => ({\n    columnSortBy: state.columnSortBy,\n    isSortDescending: state.isSortDescending,\n    nonSortableColumns: state.nonSortableColumns,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSort: data => dispatch(sort(data)),\n});\nPersonsTableSortArea = connect(mapStateToProps, mapDispatchToProps)(PersonsTableSortArea);\n\nexport default PersonsTableSortArea;\n\nPersonsTableSortArea.propTypes = {\n    columnSortBy: PropTypes.number,\n    isSortDescending: PropTypes.oneOf([true, false, null]),\n    onSort: PropTypes.func,\n};\n"],"sourceRoot":""}