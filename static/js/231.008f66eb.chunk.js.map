{"version":3,"file":"static/js/231.008f66eb.chunk.js","mappings":"6KAWA,QAPA,SAAoBA,GAClB,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAOG,EAAAA,EAAAA,GAAyBL,GAAiBM,EAAAA,EAAAA,GAAS,CACxDC,aAAcA,EAAAA,GACbN,K,4CCKDO,EAAOC,EAAAA,YAAiB,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,EAAAA,cAAoBS,EAAAA,GAAOZ,EAAAA,EAAAA,GAAS,CACtDO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,GAC9BQ,UAAWN,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BL,SAAeM,EAAAA,EAAAA,GA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADR,CAEGhB,G,cCZCiB,EAAiBhB,EAAAA,YAAiB,SAAwBC,EAAOC,GACnE,IAAIe,EAAWhB,EAAMgB,SACjBd,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAwBjB,EAAMiB,sBAC9BX,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,WAAY,UAAW,YAAa,0BAEjF,OAAoBD,EAAAA,cAAoBmB,EAAAA,GAAYtB,EAAAA,EAAAA,GAAS,CAC3DO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,GAC9Bc,uBAAuBR,EAAAA,EAAAA,GAAKQ,EAAuBf,EAAQiB,cAC3DlB,IAAKA,GACJK,GAAQU,EAAuBjB,EAAAA,cAAoB,OAAQ,CAC5DI,UAAWD,EAAQkB,qBAyBvB,SAAeR,EAAAA,EAAAA,IAzEK,SAAgBS,GAClC,MAAO,CAELX,KAAM,CACJY,QAAS,QACTC,UAAW,UACXC,MAAO,OACP,0BAA2B,CACzBC,QAASJ,EAAMK,QAAQC,OAAOC,cAEhC,iCAAkC,CAChCH,QAAS,MAKbN,aAAc,GAGdC,eAAgB,CACdP,SAAU,SACVgB,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,aAAc,UACdV,QAAS,EACTW,gBAAiB,eACjBC,WAAYhB,EAAMiB,YAAYC,OAAO,UAAW,CAC9CC,SAAUnB,EAAMiB,YAAYE,SAASC,YA0CX,CAChC3B,KAAM,qBADR,CAEGC,GC5EI,IASH2B,EAAc3C,EAAAA,YAAiB,SAAqBC,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBwC,EAAmB3C,EAAM4C,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDrC,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,EAAAA,cAAoB8C,GAAWjD,EAAAA,EAAAA,GAAS,CAC1DO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,GAC9BF,IAAKA,GACJK,OAyBL,SAAeM,EAAAA,EAAAA,GA5CK,CAElBF,KAAM,CACJoC,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChCjC,KAAM,kBADR,CAEG4B,GC7CI,IAoBHM,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAYlD,EAAAA,YAAiB,SAAmBC,EAAOC,GACzD,IAAIe,EAAWhB,EAAMgB,SACjBd,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBwC,EAAmB3C,EAAM4C,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDO,EAAQlD,EAAMkD,MACdC,EAAMnD,EAAMmD,IACZC,EAAQpD,EAAMoD,MACd9C,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GqD,GAA4D,IAAzCL,EAAiBM,QAAQT,GAC5CU,GAAiBF,GAAoBH,GAAQtD,EAAAA,EAAAA,GAAS,CACxD4D,gBAAiB,QAASC,OAAOP,EAAO,OACvCE,GAASA,EACZ,OAAoBrD,EAAAA,cAAoB8C,GAAWjD,EAAAA,EAAAA,GAAS,CAC1DO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,EAAWkD,GAAoBnD,EAAQwD,OAA6C,IAAtC,cAAcJ,QAAQT,IAAqB3C,EAAQyD,KAC/H1D,IAAKA,EACLmD,MAAOG,EACPJ,IAAKE,EAAmBH,GAASC,OAAMzD,GACtCY,GAAQU,MAkDb,SAAeJ,EAAAA,EAAAA,GA3FK,CAElBF,KAAM,CACJY,QAAS,QACTsC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBJ,MAAO,CACLlC,MAAO,QAITmC,IAAK,CAEHI,UAAW,UA0EmB,CAChCjD,KAAM,gBADR,CAEGmC,G,uBC3FH,MAAMe,EAAYC,EAAW,CACzBvD,KAAM,CACFwD,SAAU,IACVpC,SAAU,QACVE,MAAO,MACPD,IAAK,MACLK,gBAAiB,UACjB+B,MAAO,QACPC,UACI,gIAERV,MAAO,CACHW,OAAQ,GACR7C,MAAO,GACP8C,OAAQ,SACRV,eAAgB,UAChBO,MAAO,WAIA,SAASI,EAAavE,GACjC,MAAME,EAAU8D,KACV,KAAEQ,GAASxE,EACjB,OAAOwE,GACH,SAAC,EAAD,CAAMrE,UAAWD,EAAQQ,KAAzB,UACI,UAAC,EAAD,YACI,SAAC,EAAD,CACIP,UAAWD,EAAQwD,MACnBR,MAAOsB,EAAKC,SACZC,MAAM,aACN9B,UAAU,SAEd,UAAC,EAAD,YACI,SAAC+B,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKjC,UAAU,KAAhD,SACK4B,EAAKM,aAAeN,EAAKO,SAE9B,SAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQV,MAAM,gBAAgBvB,UAAU,IAA5D,SACK4B,EAAKO,OAASP,EAAKM,sBAKpC,O,sFClBJtE,EAAQT,EAAAA,YAAiB,SAAeC,EAAOC,GACjD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBwC,EAAmB3C,EAAM4C,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDqC,EAAgBhF,EAAMiF,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBlF,EAAMW,UACzBA,OAAiC,IAArBuE,EAA8B,EAAIA,EAC9CC,EAAiBnF,EAAM6E,QACvBA,OAA6B,IAAnBM,EAA4B,YAAcA,EACpD7E,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEzG,OAAoBD,EAAAA,cAAoB8C,GAAWjD,EAAAA,EAAAA,GAAS,CAC1DO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,EAAuB,aAAZ0E,EAAyB3E,EAAQkF,SAAWlF,EAAQ,YAAYuD,OAAO9C,KAAcsE,GAAU/E,EAAQmF,SAChJpF,IAAKA,GACJK,OA2DL,SAAeM,EAAAA,EAAAA,IArGK,SAAgBS,GAClC,IAAIiE,EAAa,GAMjB,OALAjE,EAAMkE,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAY7B,OAAOiC,IAAU,CACtCtB,UAAWqB,OAGR7F,EAAAA,EAAAA,GAAS,CAEdc,KAAM,CACJ0B,gBAAiBf,EAAMK,QAAQiE,WAAWC,MAC1CzB,MAAO9C,EAAMK,QAAQmE,KAAKC,QAC1BzD,WAAYhB,EAAMiB,YAAYC,OAAO,eAIvC8C,QAAS,CACPlD,aAAcd,EAAM0E,MAAM5D,cAI5BiD,SAAU,CACRY,OAAQ,aAAavC,OAAOpC,EAAMK,QAAQuE,WAE3CX,KA6E6B,CAChCxE,KAAM,YADR,CAEGN,I,gGC6BC0F,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELjC,EAAa5E,EAAAA,YAAiB,SAAoBC,EAAOC,GAC3D,IAAI4G,EAAe7G,EAAM8G,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C3G,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClB4G,EAAe/G,EAAMmE,MACrBA,OAAyB,IAAjB4C,EAA0B,UAAYA,EAC9CnE,EAAY5C,EAAM4C,UAClBoE,EAAiBhH,EAAMsB,QACvBA,OAA6B,IAAnB0F,EAA4B,UAAYA,EAClDC,EAAsBjH,EAAM4E,aAC5BA,OAAuC,IAAxBqC,GAAyCA,EACxDC,EAAgBlH,EAAMmH,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBpH,EAAMqH,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDjC,EAAiBnF,EAAM6E,QACvBA,OAA6B,IAAnBM,EAA4B,QAAUA,EAChDmC,EAAwBtH,EAAMuH,eAC9BA,OAA2C,IAA1BD,EAAmCpB,EAAwBoB,EAC5EhH,GAAQC,EAAAA,EAAAA,GAAyBP,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7J6C,EAAYD,IAAcyE,EAAY,IAAME,EAAe1C,IAAYqB,EAAsBrB,KAAa,OAC9G,OAAoB9E,EAAAA,cAAoB8C,GAAWjD,EAAAA,EAAAA,GAAS,CAC1DO,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,EAAuB,YAAZ0E,GAAyB3E,EAAQ2E,GAAoB,YAAVV,GAAuBjE,EAAQ,QAAQuD,QAAO+D,EAAAA,EAAAA,GAAWrD,KAAUgD,GAAUjH,EAAQiH,OAAQvC,GAAgB1E,EAAQ0E,aAAcyC,GAAanH,EAAQmH,UAAqB,YAAVP,GAAuB5G,EAAQ,QAAQuD,QAAO+D,EAAAA,EAAAA,GAAWV,KAAsB,YAAZxF,GAAyBpB,EAAQ,UAAUuD,QAAO+D,EAAAA,EAAAA,GAAWlG,MACvXrB,IAAKA,GACJK,OAwEL,SAAeM,EAAAA,EAAAA,IAlPK,SAAgBS,GAClC,MAAO,CAELX,KAAM,CACJ4D,OAAQ,GAIVsC,MAAOvF,EAAMoG,WAAWb,MAGxBD,MAAOtF,EAAMoG,WAAWd,MAGxBe,QAASrG,EAAMoG,WAAWC,QAG1BC,OAAQtG,EAAMoG,WAAWE,OAGzBxB,GAAI9E,EAAMoG,WAAWtB,GAGrBC,GAAI/E,EAAMoG,WAAWrB,GAGrBC,GAAIhF,EAAMoG,WAAWpB,GAGrBC,GAAIjF,EAAMoG,WAAWnB,GAGrBC,GAAIlF,EAAMoG,WAAWlB,GAGrBC,GAAInF,EAAMoG,WAAWjB,GAGrBC,UAAWpF,EAAMoG,WAAWhB,UAG5BC,UAAWrF,EAAMoG,WAAWf,UAG5BkB,SAAUvG,EAAMoG,WAAWG,SAG3BC,OAAQ,CACN/F,SAAU,WACVuC,OAAQ,EACR7C,MAAO,EACPX,SAAU,UAIZiH,UAAW,CACTvG,UAAW,QAIbwG,YAAa,CACXxG,UAAW,UAIbyG,WAAY,CACVzG,UAAW,SAIb0G,aAAc,CACZ1G,UAAW,WAIb4F,OAAQ,CACNtG,SAAU,SACVqH,aAAc,WACdC,WAAY,UAIdvD,aAAc,CACZwD,aAAc,UAIhBf,UAAW,CACTe,aAAc,IAIhBC,aAAc,CACZlE,MAAO,WAITmE,aAAc,CACZnE,MAAO9C,EAAMK,QAAQoE,QAAQyC,MAI/BC,eAAgB,CACdrE,MAAO9C,EAAMK,QAAQ+G,UAAUF,MAIjCG,iBAAkB,CAChBvE,MAAO9C,EAAMK,QAAQmE,KAAKC,SAI5B6C,mBAAoB,CAClBxE,MAAO9C,EAAMK,QAAQmE,KAAK4C,WAI5BG,WAAY,CACVzE,MAAO9C,EAAMK,QAAQmH,MAAMN,MAI7BO,cAAe,CACbxH,QAAS,UAIXyH,aAAc,CACZzH,QAAS,YAkHmB,CAChCR,KAAM,iBADR,CAEG6D","sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/UserInfoCard.jsx","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { Autocomplete } from \"@material-ui/lab\";\r\nimport PropTypes from 'prop-types';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n        position: 'fixed',\r\n        right: '1vw',\r\n        top: '1vh',\r\n        backgroundColor: '#1995AD',\r\n        color: 'white',\r\n        boxShadow:\r\n            '0 0 1px rgba(0,0,0,0.6), 0 0 2px rgba(0,0,0, 0.6), 0 0 4px rgba(0,0,0,0.6), 0 0 8px rgba(0,0,0,0.6),0 0 16px rgba(0,0,0,0.6)',\r\n    },\r\n    media: {\r\n        height: 60,\r\n        width: 60,\r\n        margin: '0 auto',\r\n        backgroundSize: 'contain',\r\n        color: 'white',\r\n    },\r\n});\r\n\r\nexport default function UserInfoCard(props) {\r\n    const classes = useStyles();\r\n    const { user } = props;\r\n    return user ? (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={user.photoURL}\r\n                    title=\"user photo\"\r\n                    component=\"img\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        {user.displayName || user.email}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {user.email || user.displayName}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    ) : null;\r\n}\r\n\r\nUserInfoCard.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardContent","_props$component","component","Component","padding","paddingBottom","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","useStyles","makeStyles","maxWidth","color","boxShadow","height","margin","UserInfoCard","user","photoURL","title","Typography","gutterBottom","variant","displayName","email","_props$square","square","_props$elevation","_props$variant","outlined","rounded","elevations","shadows","forEach","shadow","index","background","paper","text","primary","shape","border","divider","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","_props$gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","capitalize","typography","caption","button","overline","srOnly","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock"],"sourceRoot":""}