{"version":3,"sources":["js/ROUTES/routes.js","components/CustomContainer.jsx","js/FUNCTIONS/functions.js","components/EmptyLoader.jsx","js/ACTIONS/actions.js","components/LandingPage.jsx","js/REDUCERS/reducer.js","serviceWorker.js","components/Awaiting.jsx","index.js"],"names":["LANDING","LOGIN","HOME","CONNECT","ERROR","CustomContainer","withStyles","root","margin","display","flexDirection","height","justifyContent","alignItems","background","Box","sortFigures","table","is_descending","key","func","_","lowerCase","comparator_descending","a","b","comparator_ascending","sort","EmptyLoader","GET_DATA_DONE","SORT","SHOW_ADD_USER_FORM","SUBMIT_USER","LOGOUT","SHOW_ERROR","HIDE_ERROR","SHOW_WARNING","HIDE_WARNING","SHOW_MESSAGE","HIDE_MESSAGE","HIDE_ADDED_USER_MESSAGE","TOGGLE_SPINNER","TOGGLE_SUBMIT","toggleSubmit","type","submitUser","data","payload","showAddUserForm","showError","hideError","showWarning","hideWarning","showMessage","hideMessage","toggleSpinner","getDataDone","login","logout","hideAddedUserMessage","LandingPage","React","to","ROUTES","style","textDecoration","Grow","in","className","initialState","isLoading","items","isError","errorMessage","message","columnSortBy","isSortDescending","isHiddenInputForm","isHiddenAddUserButton","isHiddenAddedUserMsg","isNotLimitReached","nonSortableColumns","Set","spinnerVisible","isAlert","limit","user","submitDisabled","reducer","state","action","actions","sorted_items","isMessage","toggled_submit","spinner","newSpinner","length","Boolean","window","location","hostname","match","Awaiting","Component","props","fallback","App","lazy","Login","Error","Loader","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ce613c8.chunk.js","sourcesContent":["export const LANDING = '/';\r\nexport const LOGIN = '/login';\r\nexport const HOME = '/home';\r\nexport const CONNECT = '/connect';\r\nexport const ADMIN = '/admin';\r\nexport const ERROR = '/error';","import Box from \"@material-ui/core/Box\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const CustomContainer = withStyles({\r\n  root: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: \"transparent,\",\r\n  },\r\n})(Box);\r\n","import _ from \"lodash\";\n\nexport const limitStatus = (source, limit) => !(source.length >= limit);\n\nexport function checkDuplicates(source, pattern, column) {\n  const comparator = (item) =>\n    _.isEqual(_.nth(item, column), _.nth(pattern, column));\n  const result = source.filter(comparator);\n  return !(result.length > 0);\n}\n\nexport const sortFigures = (table, is_descending, key, func = _.lowerCase) => {\n  const comparator_descending = (a, b) => {\n    if (func(a[key]) > func(b[key])) {\n      return -1;\n    }\n    if (func(b[key]) > func(a[key])) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const comparator_ascending = (a, b) => {\n    if (func(a[key]) > func(b[key])) {\n      return 1;\n    }\n    if (func(b[key]) > func(a[key])) {\n      return -1;\n    }\n    return 0;\n  };\n\n  return is_descending\n    ? [...table].sort(comparator_descending)\n    : [...table].sort(comparator_ascending);\n};\n","\r\nconst EmptyLoader = () => null;\r\nexport default EmptyLoader;","export const GET_DATA_DONE = \"GET_DATA_DONE\";\nexport const SORT = \"SORT\";\nexport const SHOW_ADD_USER_FORM = \"SHOW_ADD_USER_FORM\";\nexport const SUBMIT_USER = \"SUBMIT\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SHOW_ERROR = \"SHOW_ERROR\";\nexport const HIDE_ERROR = \"HIDE_ERROR\";\nexport const SHOW_WARNING = \"SHOW_WARNING\";\nexport const HIDE_WARNING = \"HIDE_WARNING\";\nexport const SHOW_MESSAGE = \"SHOW_MESSAGE\";\nexport const HIDE_MESSAGE = \"HIDE_MESSAGE\";\nexport const HIDE_ADDED_USER_MESSAGE = \"HIDE_ADDED_USER_MESSAGE\";\nexport const TOGGLE_SPINNER = \"TOGGLE_SPINNER\";\nexport const BLOCK_SUBMIT = \"BLOCK_SUBMIT\";\nexport const TOGGLE_SUBMIT = \"TOGGLE_SUBMIT\";\n\nexport function toggleSubmit() {\n  return { type: TOGGLE_SUBMIT };\n}\n\nexport function blockSubmit() {\n  return { type: BLOCK_SUBMIT };\n}\n\nexport function submitUser(data) {\n  return { type: SUBMIT_USER, payload: data };\n}\n\nexport function showAddUserForm() {\n  return { type: SHOW_ADD_USER_FORM };\n}\n\nexport function sort(data) {\n  return {\n    type: SORT,\n    payload: data,\n  };\n}\n\nexport function showError(data) {\n  return {\n    type: SHOW_ERROR,\n    payload: data,\n  };\n}\n\nexport function hideError() {\n  return {\n    type: HIDE_ERROR,\n  };\n}\n\nexport function showWarning(data) {\n  return {\n    type: SHOW_WARNING,\n    payload: data,\n  };\n}\n\nexport function hideWarning() {\n  return {\n    type: HIDE_WARNING,\n  };\n}\n\nexport function showMessage(data) {\n  return {\n    type: SHOW_MESSAGE,\n    payload: data,\n  };\n}\n\nexport function hideMessage() {\n  return {\n    type: HIDE_MESSAGE,\n  };\n}\n\nexport function toggleSpinner() {\n  return {\n    type: TOGGLE_SPINNER,\n  };\n}\n\nexport function getDataDone(data) {\n  return {\n    type: GET_DATA_DONE,\n    payload: data,\n  };\n}\n\nexport function login(data) {\n  return {\n    type: LOGIN,\n    payload: data,\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT,\n  };\n}\n\nexport function hideAddedUserMessage() {\n  return {\n    type: HIDE_ADDED_USER_MESSAGE,\n  };\n}\n","import * as React from \"react\";\r\nimport { CustomContainer } from \"./CustomContainer\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport * as ROUTES from \"../js/ROUTES/routes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LandingPage = React.memo(() => {\r\n  return (\r\n    <Link to={ROUTES.HOME} style={{ textDecoration: \"none\" }}>\r\n      <CustomContainer>\r\n        <Grow in={true}>\r\n          <div className=\"landing_message\">Witam w Firebase :)</div>\r\n        </Grow>\r\n      </CustomContainer>\r\n    </Link>\r\n  );\r\n});\r\nexport default LandingPage;\r\n","import * as actions from \"../ACTIONS/actions\";\nimport { sortFigures } from \"../FUNCTIONS/functions\";\n\nconst initialState = {\n  isLoading: false,\n  items: [],\n  isError: false,\n  errorMessage: \"\",\n  message: null,\n  columnSortBy: null,\n  isSortDescending: false,\n  isHiddenInputForm: true,\n  isHiddenAddUserButton: false,\n  isHiddenAddedUserMsg: true,\n  isNotLimitReached: true,\n  nonSortableColumns: new Set([0]),\n  spinnerVisible: false,\n  isAlert: false,\n  limit: 20,\n  user: null,\n  submitDisabled: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SUBMIT_USER:\n      return {\n        ...state,\n        isHiddenInputForm: true,\n        isHiddenAddUserButton: false,\n        isHiddenAddedUserMsg: false,\n      };\n\n    case actions.SHOW_ADD_USER_FORM:\n      return state.isHiddenInputForm\n        ? {\n            ...state,\n            isHiddenAddedUserMsg: true,\n            isHiddenAddUserButton: true,\n            isHiddenInputForm: false,\n          }\n        : { ...state };\n\n    case actions.SORT:\n      const { isSortDescending, columnSortBy } = action.payload;\n      const sorted_items = sortFigures(\n        [...state.items],\n        isSortDescending,\n        columnSortBy\n      );\n      return {\n        ...state,\n        items: sorted_items,\n        isHiddenAddedUserMsg: true,\n        isSortDescending,\n        columnSortBy,\n      };\n\n    case actions.SHOW_ERROR:\n      return {\n        ...state,\n        isError: true,\n        errorMessage: action.payload,\n      };\n    case actions.HIDE_ERROR:\n      return {\n        ...state,\n        isError: false,\n        errorMessage: null,\n      };\n    case actions.SHOW_WARNING:\n      return {\n        ...state,\n        isAlert: true,\n        errorMessage: action.payload,\n      };\n    case actions.HIDE_WARNING:\n      return {\n        ...state,\n        isAlert: false,\n        errorMessage: null,\n      };\n    case actions.SHOW_MESSAGE:\n      return {\n        ...state,\n        isMessage: true,\n        message: action.payload,\n      };\n    case actions.HIDE_MESSAGE:\n      return {\n        ...state,\n        isMessage: false,\n        message: null,\n      };\n    case actions.TOGGLE_SUBMIT:\n      const toggled_submit = !state.submitDisabled;\n      return {\n        ...state,\n        submitDisabled: toggled_submit,\n      };\n\n    case actions.TOGGLE_SPINNER:\n      const spinner = state.spinnerVisible;\n      const newSpinner = !spinner;\n      return {\n        ...state,\n        spinnerVisible: newSpinner,\n      };\n\n    case actions.GET_DATA_DONE:\n      const { limit } = state;\n\n      const isNotLimitReached = action.payload\n        ? action.payload.length < limit\n        : true;\n      return {\n        ...state,\n        isLoading: false,\n        items: action.payload,\n        isNotLimitReached: isNotLimitReached,\n      };\n\n    case actions.HIDE_ADDED_USER_MESSAGE:\n      return {\n        ...state,\n        isHiddenAddedUserMsg: true,\n      };\n\n    case actions.LOGIN:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case actions.LOGOUT:\n      return {\n        ...state,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Suspense } from \"react\";\r\nimport EmptyLoader from \"./EmptyLoader\";\r\n\r\nconst Awaiting = (Component) => {\r\n  return (props) => (\r\n    <Suspense fallback={EmptyLoader()}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\nexport default Awaiting;\r\n","import React, { lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/App.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport LandingPage from \"./components/LandingPage\";\nimport reducer from \"./js/REDUCERS/reducer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as ROUTES from \"./js/ROUTES/routes\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Awaiting from \"./components/Awaiting\";\n\nconst App = lazy(() => import(\"./components/App\"));\nconst Login = lazy(() => import(\"./components/Login\"));\nconst Error = lazy(() => import(\"./components/Error\"));\nconst Loader = lazy(() => import(\"./components/Loader\"));\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\n        <Route exact path={ROUTES.HOME} component={Awaiting(App)} />\n        <Route exact path={ROUTES.LOGIN} component={Awaiting(Login)} />\n        <Route exact path={ROUTES.ERROR} component={Awaiting(Error)} />\n        <Route exact path={ROUTES.CONNECT} component={Awaiting(Loader)} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// function noConnection() {\n//   const state = store.getState();\n//   if (state.isError) { window.alert('Błąd połączenia albo zasób sieciowy nie jest dostępny'); }\n// }\n// store.subscribe(noConnection);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}