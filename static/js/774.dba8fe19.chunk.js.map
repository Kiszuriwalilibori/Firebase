{"version":3,"file":"static/js/774.dba8fe19.chunk.js","mappings":"mKAAaA,EAAW,CAAC,KAAM,OAAQ,U,4BCiDvC,GAAeC,EAAAA,EAAAA,KAXS,SAAAC,GAAK,MAAK,CAChCC,aAAcD,EAAMC,aACpBC,iBAAkBF,EAAME,iBACxBC,mBAAoBH,EAAMG,mBAHC,IAMF,SAAAC,GAAQ,MAAK,CACtCC,OAAQ,SAAAC,GAAI,OAAIF,GAASG,EAAAA,EAAAA,IAAKD,GAAlB,EADqB,GAKnC,EAzC6B,SAAAE,GAC3B,IAAQP,EAA+DO,EAA/DP,aAAcE,EAAiDK,EAAjDL,mBAAoBD,EAA6BM,EAA7BN,iBAAkBG,EAAWG,EAAXH,OAEtDI,EAAQP,EAAmB,SAAW,SAgB5C,OACE,SAAC,aAAD,CAAgBQ,QAfC,SAAAC,GACjB,IAAMC,EAAeD,EAAEE,OAAOC,eAC8BC,IAAvBZ,GAAqCA,EAAmBa,IAAIJ,IAS/FP,EALa,CACXH,iBAFmBD,IAAiBW,IAAiBV,EAGrDD,aAAcW,GAKnB,EAEC,UACE,wBACGd,EAASmB,KAAI,SAACC,EAAMC,GAAP,OACZ,UAAC,aAAD,gBArBsBC,EAqB6BD,EArBxBlB,IAAiBmB,EAqBgBF,EAAOT,EAAQS,GAA3E,MAAqBA,GArBC,IAAAE,CAoBV,OAMrB,G","sources":["config.js","pages/PersonsPage/parts/PersonsTable/SortArea.jsx"],"sourcesContent":["export const headings = [\"ID\", \"NAME\", \"E-MAIL\"];\r\nexport const limit = 15;\r\n\r\n/**\r\n * todo te pierwsze to na enum chyba\r\n * */\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { headings } from \"../../../../config\";\r\nimport { sort } from \"js/redux/actions\";\r\nimport { Header } from \"styles/style\";\r\n\r\nconst PersonsTableSortArea = props => {\r\n  const { columnSortBy, nonSortableColumns, isSortDescending, onSort } = props;\r\n  const isCurrentColumnSorted = x => columnSortBy === x;\r\n  const arrow = isSortDescending ? \"\\u2191\" : \"\\u2193\";\r\n\r\n  const handleSort = e => {\r\n    const targetColumn = e.target.cellIndex;\r\n    const columnNotExcludedFromSorting = nonSortableColumns === undefined || !nonSortableColumns.has(targetColumn);\r\n\r\n    if (columnNotExcludedFromSorting) {\r\n      const isDescending = columnSortBy === targetColumn && !isSortDescending;\r\n      const data = {\r\n        isSortDescending: isDescending,\r\n        columnSortBy: targetColumn,\r\n      };\r\n\r\n      onSort(data);\r\n    }\r\n  };\r\n  return (\r\n    <Header.Wrapper onClick={handleSort}>\r\n      <tr>\r\n        {headings.map((item, index) => (\r\n          <Header.Section key={item}> {isCurrentColumnSorted(index) ? item + arrow : item} </Header.Section>\r\n        ))}\r\n      </tr>\r\n    </Header.Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  columnSortBy: state.columnSortBy,\r\n  isSortDescending: state.isSortDescending,\r\n  nonSortableColumns: state.nonSortableColumns,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSort: data => dispatch(sort(data)),\r\n});\r\n//PersonsTableSortArea = connect(mapStateToProps, mapDispatchToProps)(PersonsTableSortArea);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonsTableSortArea);\r\n\r\nPersonsTableSortArea.propTypes = {\r\n  columnSortBy: PropTypes.number,\r\n  isSortDescending: PropTypes.oneOf([true, false, null]),\r\n  onSort: PropTypes.func,\r\n};\r\n"],"names":["headings","connect","state","columnSortBy","isSortDescending","nonSortableColumns","dispatch","onSort","data","sort","props","arrow","onClick","e","targetColumn","target","cellIndex","undefined","has","map","item","index","x"],"sourceRoot":""}